//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PROJECT_MVC
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProjectDBEntities : DbContext
    {
        public ProjectDBEntities()
            : base("name=ProjectDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<MVC_Tab> MVC_Tab { get; set; }
        public virtual DbSet<BookTab> BookTabs { get; set; }
    
        public virtual int sp_insert(string na, Nullable<int> ag, string addr, string em, string ph, string un, string pwd)
        {
            var naParameter = na != null ?
                new ObjectParameter("na", na) :
                new ObjectParameter("na", typeof(string));
    
            var agParameter = ag.HasValue ?
                new ObjectParameter("ag", ag) :
                new ObjectParameter("ag", typeof(int));
    
            var addrParameter = addr != null ?
                new ObjectParameter("addr", addr) :
                new ObjectParameter("addr", typeof(string));
    
            var emParameter = em != null ?
                new ObjectParameter("em", em) :
                new ObjectParameter("em", typeof(string));
    
            var phParameter = ph != null ?
                new ObjectParameter("ph", ph) :
                new ObjectParameter("ph", typeof(string));
    
            var unParameter = un != null ?
                new ObjectParameter("un", un) :
                new ObjectParameter("un", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert", naParameter, agParameter, addrParameter, emParameter, phParameter, unParameter, pwdParameter);
        }
    
        public virtual int sp_login(string un, string pwd, ObjectParameter status)
        {
            var unParameter = un != null ?
                new ObjectParameter("un", un) :
                new ObjectParameter("un", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_login", unParameter, pwdParameter, status);
        }
    
        public virtual ObjectResult<sp_pview_Result> sp_pview(string un)
        {
            var unParameter = un != null ?
                new ObjectParameter("un", un) :
                new ObjectParameter("un", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_pview_Result>("sp_pview", unParameter);
        }
    
        public virtual int sp_update(string un, Nullable<int> ag, string addr)
        {
            var unParameter = un != null ?
                new ObjectParameter("un", un) :
                new ObjectParameter("un", typeof(string));
    
            var agParameter = ag.HasValue ?
                new ObjectParameter("ag", ag) :
                new ObjectParameter("ag", typeof(int));
    
            var addrParameter = addr != null ?
                new ObjectParameter("addr", addr) :
                new ObjectParameter("addr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update", unParameter, agParameter, addrParameter);
        }
    
        public virtual int sp_pwdchange(string un, string oldpwd, string newpwd, ObjectParameter status)
        {
            var unParameter = un != null ?
                new ObjectParameter("un", un) :
                new ObjectParameter("un", typeof(string));
    
            var oldpwdParameter = oldpwd != null ?
                new ObjectParameter("oldpwd", oldpwd) :
                new ObjectParameter("oldpwd", typeof(string));
    
            var newpwdParameter = newpwd != null ?
                new ObjectParameter("newpwd", newpwd) :
                new ObjectParameter("newpwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_pwdchange", unParameter, oldpwdParameter, newpwdParameter, status);
        }
    
        public virtual int bookinsert(string bna, string bsum)
        {
            var bnaParameter = bna != null ?
                new ObjectParameter("bna", bna) :
                new ObjectParameter("bna", typeof(string));
    
            var bsumParameter = bsum != null ?
                new ObjectParameter("bsum", bsum) :
                new ObjectParameter("bsum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("bookinsert", bnaParameter, bsumParameter);
        }
    
        public virtual ObjectResult<bookviewdetails_Result> bookviewdetails(string bname)
        {
            var bnameParameter = bname != null ?
                new ObjectParameter("bname", bname) :
                new ObjectParameter("bname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bookviewdetails_Result>("bookviewdetails", bnameParameter);
        }
    
        public virtual ObjectResult<bookviewall_Result> bookviewall()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bookviewall_Result>("bookviewall");
        }
    }
}
